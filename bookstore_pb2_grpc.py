# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import bookstore_pb2 as bookstore__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in bookstore_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BookStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddBook = channel.unary_unary(
                '/bookstore.BookStore/AddBook',
                request_serializer=bookstore__pb2.AddBookRequest.SerializeToString,
                response_deserializer=bookstore__pb2.AddBookResponse.FromString,
                _registered_method=True)
        self.SearchBook = channel.unary_unary(
                '/bookstore.BookStore/SearchBook',
                request_serializer=bookstore__pb2.SearchBookRequest.SerializeToString,
                response_deserializer=bookstore__pb2.SearchBookResponse.FromString,
                _registered_method=True)
        self.UpdateStock = channel.unary_unary(
                '/bookstore.BookStore/UpdateStock',
                request_serializer=bookstore__pb2.UpdateStockRequest.SerializeToString,
                response_deserializer=bookstore__pb2.UpdateStockResponse.FromString,
                _registered_method=True)
        self.ListBooks = channel.unary_unary(
                '/bookstore.BookStore/ListBooks',
                request_serializer=bookstore__pb2.ListBooksRequest.SerializeToString,
                response_deserializer=bookstore__pb2.ListBooksResponse.FromString,
                _registered_method=True)
        self.DeleteBook = channel.unary_unary(
                '/bookstore.BookStore/DeleteBook',
                request_serializer=bookstore__pb2.DeleteBookRequest.SerializeToString,
                response_deserializer=bookstore__pb2.DeleteBookResponse.FromString,
                _registered_method=True)
        self.SubscribeToNewBooks = channel.unary_stream(
                '/bookstore.BookStore/SubscribeToNewBooks',
                request_serializer=bookstore__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=bookstore__pb2.Book.FromString,
                _registered_method=True)
        self.BulkAddBooks = channel.stream_unary(
                '/bookstore.BookStore/BulkAddBooks',
                request_serializer=bookstore__pb2.AddBookRequest.SerializeToString,
                response_deserializer=bookstore__pb2.BulkAddResponse.FromString,
                _registered_method=True)
        self.Chat = channel.stream_stream(
                '/bookstore.BookStore/Chat',
                request_serializer=bookstore__pb2.ChatMessage.SerializeToString,
                response_deserializer=bookstore__pb2.ChatMessage.FromString,
                _registered_method=True)


class BookStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeToNewBooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkAddBooks(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Chat(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddBook': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBook,
                    request_deserializer=bookstore__pb2.AddBookRequest.FromString,
                    response_serializer=bookstore__pb2.AddBookResponse.SerializeToString,
            ),
            'SearchBook': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchBook,
                    request_deserializer=bookstore__pb2.SearchBookRequest.FromString,
                    response_serializer=bookstore__pb2.SearchBookResponse.SerializeToString,
            ),
            'UpdateStock': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStock,
                    request_deserializer=bookstore__pb2.UpdateStockRequest.FromString,
                    response_serializer=bookstore__pb2.UpdateStockResponse.SerializeToString,
            ),
            'ListBooks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBooks,
                    request_deserializer=bookstore__pb2.ListBooksRequest.FromString,
                    response_serializer=bookstore__pb2.ListBooksResponse.SerializeToString,
            ),
            'DeleteBook': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBook,
                    request_deserializer=bookstore__pb2.DeleteBookRequest.FromString,
                    response_serializer=bookstore__pb2.DeleteBookResponse.SerializeToString,
            ),
            'SubscribeToNewBooks': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeToNewBooks,
                    request_deserializer=bookstore__pb2.SubscribeRequest.FromString,
                    response_serializer=bookstore__pb2.Book.SerializeToString,
            ),
            'BulkAddBooks': grpc.stream_unary_rpc_method_handler(
                    servicer.BulkAddBooks,
                    request_deserializer=bookstore__pb2.AddBookRequest.FromString,
                    response_serializer=bookstore__pb2.BulkAddResponse.SerializeToString,
            ),
            'Chat': grpc.stream_stream_rpc_method_handler(
                    servicer.Chat,
                    request_deserializer=bookstore__pb2.ChatMessage.FromString,
                    response_serializer=bookstore__pb2.ChatMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bookstore.BookStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('bookstore.BookStore', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BookStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bookstore.BookStore/AddBook',
            bookstore__pb2.AddBookRequest.SerializeToString,
            bookstore__pb2.AddBookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SearchBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bookstore.BookStore/SearchBook',
            bookstore__pb2.SearchBookRequest.SerializeToString,
            bookstore__pb2.SearchBookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bookstore.BookStore/UpdateStock',
            bookstore__pb2.UpdateStockRequest.SerializeToString,
            bookstore__pb2.UpdateStockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bookstore.BookStore/ListBooks',
            bookstore__pb2.ListBooksRequest.SerializeToString,
            bookstore__pb2.ListBooksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/bookstore.BookStore/DeleteBook',
            bookstore__pb2.DeleteBookRequest.SerializeToString,
            bookstore__pb2.DeleteBookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeToNewBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/bookstore.BookStore/SubscribeToNewBooks',
            bookstore__pb2.SubscribeRequest.SerializeToString,
            bookstore__pb2.Book.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BulkAddBooks(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/bookstore.BookStore/BulkAddBooks',
            bookstore__pb2.AddBookRequest.SerializeToString,
            bookstore__pb2.BulkAddResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Chat(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/bookstore.BookStore/Chat',
            bookstore__pb2.ChatMessage.SerializeToString,
            bookstore__pb2.ChatMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
